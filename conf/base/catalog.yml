# Here you can define all your data sets by using simple YAML syntax.
#
# Documentation for this file format can be found in "The Data Catalog"
# Link: https://docs.kedro.org/en/stable/data/data_catalog.html



wine_raw_data:
  type: pandas.CSVDataset
  filepath: data/01_raw/winemag-data-130k-v2.csv
  load_args:
    index_col: 0

wine_data_drift_test:
  type: pandas.CSVDataset
  filepath: data/01_raw/winemag_data_drift.csv
  save_args:
    index: false

wine_ingested_data:
  type: pandas.CSVDataset
  filepath: data/02_intermediate/wine_ingested_data.csv

reporting_data_unit_test:
    type: pandas.CSVDataset
    filepath: data/08_reporting/reporting_data_unit_test.csv

# wine_preprocessed_intermediate:
  # type: kedro_datasets.pandas.MemoryDataset

wine_preprocessed:
  type: pandas.CSVDataset
  filepath: data/03_primary/wine_preprocessed.csv

# reporting_data_train:
#   type: kedro_mlflow.io.artifacts.MlflowArtifactDataset
#   dataset:
#     type: json.JSONDataset
#     filepath: data/08_reporting/reporting_data_train.json

# reporting_tests:
#   type: pandas.CSVDataset
#   filepath: data/08_reporting/data_tests.csv


# encoder_transform:
#   type: kedro_mlflow.io.artifacts.MlflowArtifactDataset
#   dataset:
#     type: pickle.PickleDataset
#     filepath: data/04_feature/encoder.pkl

# Train-test split outputs
X_train:
  type: pandas.CSVDataset
  filepath: data/04_train_test_split/X_train.csv

y_train:
  type: pandas.CSVDataset
  filepath: data/04_train_test_split/y_train.csv

X_test:
  type: pandas.CSVDataset
  filepath: data/04_train_test_split/X_test.csv

y_test:
  type: pandas.CSVDataset
  filepath: data/04_train_test_split/y_test.csv 

# Feature engineered datasets
X_train_engineered:
  type: pandas.CSVDataset
  filepath: data/05_feature/X_train_engineered.csv
  
X_test_engineered:
  type: pandas.CSVDataset
  filepath: data/05_feature/X_test_engineered.csv

# univariate_drift_results:
#   type: kedro_datasets.pickle.PickleDataset
#   filepath: data/08_reporting/univariate_drift_results.pkl 

# univariate_drift_plot:
#   type: kedro_datasets.plotly.PlotlyDataset
#   filepath: data/08_reporting/univariate_drift_plot.html
#   plotly_args: {}  

univariate_drift_results:
  type: pandas.CSVDataset  # Change from pickle.PickleDataSet to pandas.CSVDataSet
  filepath: data/08_reporting/univariate_drift_results.csv # Use .csv extension

# production_columns:
#   type: kedro_mlflow.io.artifacts.MlflowArtifactDataset
#   dataset:
#     type: pickle.PickleDataset
#     filepath: data/06_models/production_cols.pkl

# best_columns:
#   type: kedro_mlflow.io.artifacts.MlflowArtifactDataset
#   dataset:
#     type: pickle.PickleDataset
#     filepath: data/06_models/best_cols.pkl

# production_model:
#   type: kedro_mlflow.io.artifacts.MlflowArtifactDataset
#   dataset:
#     type: pickle.PickleDataset
#     filepath: data/06_models/production_model.pkl

# production_model_metrics:
#   type: kedro_mlflow.io.artifacts.MlflowArtifactDataset
#   dataset:
#     type: json.JSONDataset
#     filepath: data/08_reporting/production_model_metrics.json

# drift_result:
#   type: pandas.CSVDataset
#   filepath: data/08_reporting/drift_result.csv

# output_plot:
#   type: kedro_mlflow.io.artifacts.MlflowArtifactDataset
#   dataset:
#     type: matplotlib.MatplotlibWriter
#     filepath: data/08_reporting/shap_plot.png

# feature_names:
#   type: pickle.PickleDataset
#   filepath: data/05_model_input/feature_names.pkl

